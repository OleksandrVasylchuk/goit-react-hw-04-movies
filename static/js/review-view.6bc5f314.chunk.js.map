{"version":3,"sources":["views/Reviews.js"],"names":["ReviewsView","moviesId","useState","reviews","setReviews","useEffect","themoviedbAPI","then","data","console","log","results","length","map","review","author","content","id"],"mappings":"0NAGe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACRC,IAA8BL,GAAUM,MAAK,SAACC,GAC5CC,QAAQC,IAAIF,EAAKG,SAEjBP,EAAWI,EAAKG,cAEjB,CAACV,IAGF,mCACE,8BACGE,EAAQS,OAAS,EAChB,6BACGT,EAAQU,KAAI,SAACC,GAAD,OACX,+BACE,8BACE,yCADF,IACmBA,EAAOC,UAE1B,4BAAID,EAAOE,YAJJF,EAAOG,SASpB","file":"static/js/review-view.6bc5f314.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as themoviedbAPI from \"../services/movieteka-api\";\n\nexport default function ReviewsView({ moviesId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    themoviedbAPI.getReviewsMovie(moviesId).then((data) => {\n      console.log(data.results);\n\n      setReviews(data.results);\n    });\n  }, [moviesId]);\n\n  return (\n    <>\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>\n                  <b>AUTHOR: </b> {review.author}\n                </p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We do not have any reviews for this movie.</p>\n        )}\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}